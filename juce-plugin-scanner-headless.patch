diff --git a/modules/juce_audio_processors/scanning/juce_PluginDirectoryScanner.cpp b/modules/juce_audio_processors/scanning/juce_PluginDirectoryScanner.cpp
index 9eab44c26..d711120ba 100644
--- a/modules/juce_audio_processors/scanning/juce_PluginDirectoryScanner.cpp
+++ b/modules/juce_audio_processors/scanning/juce_PluginDirectoryScanner.cpp
@@ -83,6 +83,8 @@ void PluginDirectoryScanner::updateProgress()
 bool PluginDirectoryScanner::scanNextFile (bool dontRescanIfAlreadyInList,
                                            String& nameOfPluginBeingScanned)
 {
+    puts(("  !!!!!! scanNextFile: " + nameOfPluginBeingScanned).toRawUTF8());
+    puts(String::formatted("  nextIndex: %d", nextIndex.get()).toRawUTF8());
     const int index = --nextIndex;
 
     if (index >= 0)
diff --git a/modules/juce_audio_processors/scanning/juce_PluginListComponent.cpp b/modules/juce_audio_processors/scanning/juce_PluginListComponent.cpp
index 28e06a093..277f75083 100644
--- a/modules/juce_audio_processors/scanning/juce_PluginListComponent.cpp
+++ b/modules/juce_audio_processors/scanning/juce_PluginListComponent.cpp
@@ -399,7 +399,7 @@ public:
 
         // If the filesOrIdentifiersToScan argument isn't empty, we should only scan these
         // If the path is empty, then paths aren't used for this format.
-        if (filesOrIdentifiersToScan.isEmpty() && path.getNumPaths() > 0)
+        if (!owner.headlessScanning && filesOrIdentifiersToScan.isEmpty() && path.getNumPaths() > 0)
         {
            #if ! JUCE_IOS
             if (propertiesToUse != nullptr)
@@ -420,6 +420,9 @@ public:
         }
         else
         {
+            if (owner.headlessScanning)
+                pathList.setPath (path);
+            puts(("!!!!! " + path.toString()).toRawUTF8());
             startScan();
         }
     }
diff --git a/modules/juce_audio_processors/scanning/juce_PluginListComponent.h b/modules/juce_audio_processors/scanning/juce_PluginListComponent.h
index 307f6fd89..758ba1488 100644
--- a/modules/juce_audio_processors/scanning/juce_PluginListComponent.h
+++ b/modules/juce_audio_processors/scanning/juce_PluginListComponent.h
@@ -109,6 +109,9 @@ public:
     */
     TextButton& getOptionsButton()                      { return optionsButton; }
 
+    /* Indicates whether it should perform headless scanning. Headless scanner skips path selection dialog */
+    void setHeadlessScanning (bool isHeadless)          { headlessScanning = isHeadless; }
+
 private:
     //==============================================================================
     AudioPluginFormatManager& formatManager;
@@ -119,6 +122,7 @@ private:
     PropertiesFile* propertiesToUse;
     String dialogTitle, dialogText;
     bool allowAsync;
+    bool headlessScanning;
     int numThreads;
 
     class TableModel;
