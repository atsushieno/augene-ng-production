name: build dist

on:
  push:
  pull_request:

jobs:
  linux-build:
    name: build on linux
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: cache sfz
      uses: actions/cache@v2
      env:
        cache-name: cache-sfz
      with:
        path:
          /home/runner/sounds/sfz
          /home/runner/DrawbarOrganEmulation-SFZ-20190712.tar.xz
          /home/runner/nbo_2.zip
        key: sounds/sfz
    - name: apt update
      run: |
        sudo apt-get update
        sudo apt-get install xvfb wget unzip libc6 \
          libcurl3-gnutls-dev  libfreetype6-dev libgcc1 libjpeg-dev \
          libpng-dev libstdc++6 libwebkit2gtk-4.0-dev libx11-6 \
          libxext6 zlib1g  make g++ mesa-common-dev libasound2-dev \
          libjack-jackd2-dev ladspa-sdk \
          doxygen libgrpc++-dev libgrpc-dev \
          libprotobuf-dev protobuf-compiler protobuf-compiler-grpc \
          graphviz cmake ninja-build \
          lv2-dev liblilv-dev libsuil-dev \
          ffmpeg
    - name: set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: make sfz
      run: make sfz
    - name: setup plugins
      run: make sfizz-config plugins
    - name: setup augene-ng
      run: make augene-ng
    - name: setup plugins ready for playing
      run: make setup-plugin-run-env
    - name: generate mp3
      if: false # FIXME: use this instead
      run: make generate-music
    - name: augene to TE # FIXME: remove these split tasks
      run: make compile-to-tracktionedit
    - name: TE to WAV # FIXME: remove these split tasks
      run: make render-wav
    - name: WAV to MP3 # FIXME: remove these split tasks
      run: make convert-wav-to-mp3
    - name: upload artifact
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: augene-ng-production-artifacts
        path: |
          external/augene-ng/samples/mars/mars_sfizz.mp3
